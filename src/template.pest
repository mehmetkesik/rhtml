// /* --- Utility & Lexical Rules ---

WHITESPACE = _{ " " | "\t" | "\r" | NEWLINE}
rust_identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }


// --- Core Template Rules ---

template = { SOI ~ (comment_block | block | text)* ~ EOI }
inner_template = { (comment_block | block | inner_text)* }


// --- Text and Comment Rules ---

text = @{ ( "@@}" | "@@{" | "@@" |  (!("@") ~ ANY) )+ }
inner_text = @{ ( "@@}" | "@@{" | "@@" | (!("@" | "}") ~ ANY) )+ }

comment_block = { "@*" ~ comment_content ~ "*@" }
comment_content = @{ ( ("*" ~ !("@")) | (!("*") ~ ANY) )* }


// --- Block Types ---

block = !{
    "@" ~ (rust_block | rust_expr | rust_expr_simple | rust_expr_parenthesized)
}


// --- Rust Expression Blocks (@if, @for, etc.) ---

rust_expr = {
    WHITESPACE* ~ !("@") ~ 
    (rust_expr_head ~  WHITESPACE* ~ "{" ~ inner_template ~ "}")+
}

rust_expr_head = @{
    (("if" | ("else" ~ WHITESPACE+ ~ "if") | "for" | "while") ~ WHITESPACE+ ~ (!("{" | "@" | "}") ~ ANY)+)
  | ("else")
}

chain_segment = {
    ("." | "?.") ~ rust_identifier
  | "::" ~ rust_identifier
  | ("?"? ~ "(" ~ balanced_parens* ~ ")")
  | ("?"? ~ "[" ~ balanced_brackets* ~ "]")
  | ("::" ~ "<" ~ balanced_generics* ~ ">")
  | "?"
}

balanced_parens   = { &(!(")" | expression_boundary)) ~ ("(" ~ balanced_parens* ~ ")" | !(NEWLINE) ~ ANY) }
balanced_brackets = { &(!("]" | expression_boundary)) ~ ("[" ~ balanced_brackets* ~ "]" | !(NEWLINE) ~ ANY) }
balanced_generics = { &(!(">" | expression_boundary)) ~ ("<" ~ balanced_generics* ~ ">" | !(NEWLINE) ~ ANY) }

expression_boundary = _{
    ("<" ~ ("/" | ASCII_ALPHA))
  | "@"
  | "{"
  | NEWLINE
}


// --- Simple Rust Expressions (@identifier...) ---

rust_expr_simple = @{
    !(WHITESPACE* ~ ("{" | "if" | "for" | "while" | "else")) ~ rust_identifier ~ (&(!expression_boundary) ~ chain_segment)*
}


// --- Rust Code Blocks (@{ ... }) ---

rust_block = @{ WHITESPACE* ~ "{" ~ rust_block_content* ~ "}" }

rust_block_content = _{
    ( "{" ~ rust_block_content* ~ "}" )
  | ( (!"}") ~ ANY )
}


// --- Parenthesized Rust Expressions (@(expressions)) ---

rust_expr_parenthesized = _{
    "(" ~ rust_expr_paren ~ ")"
}

rust_expr_paren = @{
	(nested_expression | (!(")") ~ ANY))*
}

nested_expression = _{
    ( "(" ~ (nested_expression | (!(")") ~ ANY))* ~ ")" )
  | ( "[" ~ (nested_expression | (!("]") ~ ANY))* ~ "]" )
  | ( "{" ~ (nested_expression | (!("}") ~ ANY))*   ~ "}" )
}

// TODO: Add html tags support for rust blocks ex: @{ if true { <div> } }
// TODO: Add @: support for rust blocks for single line texts
// TODO: Add <text>text</text> support for rust blocks for multiline texts