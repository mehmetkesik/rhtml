for tests.rs:
#[test]
pub fn test_process_simple() {
    let ident = syn::Ident::new("HomePage", Span::call_site());
    process_template("home.rs.html".to_string(), &ident);
}

for rshtml_parser:
    parsed_templates: HashMap<String, String>,
    template_stack: Vec<(String, usize, usize)>,

for parse_template:
    if !self.parsed_templates.contains_key(path) {
        self.parsed_templates.insert(path.to_string(), input.clone());
    }


for include,use vs:
    parser.template_stack.push((path.clone(), pair_span.start(), pair_span.end()));

for node:
    pub struct NSpan {
        pub templates: Vec<(String, usize, usize)>,
        pub start: usize,
        pub end: usize,
    }